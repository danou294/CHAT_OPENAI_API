# Rediriger HTTP vers HTTPS pour le frontend
server {
    listen 80;
    server_name localhost;

    # Redirection HTTP vers HTTPS pour le frontend
    return 301 https://$host$request_uri;
}

# Configuration HTTPS pour le frontend
server {
    listen 443 ssl;
    server_name localhost;

    # Chemins vers votre certificat et clé privée
    ssl_certificate /etc/nginx/certificat.cer;
    ssl_certificate_key /etc/nginx/Codesphere_key.key;

    # Paramètres SSL recommandés
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Configuration de sécurité supplémentaire
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Configuration pour les fichiers statiques et les SPA (Single Page Applications)
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Page d'erreur personnalisée pour les erreurs serveur
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# Configuration HTTPS pour le backend sur le port 8443
server {
    listen 8443 ssl;
    server_name localhost;

    # Chemins vers le même certificat et clé privée que pour le frontend
    ssl_certificate /etc/nginx/certificat.cer;
    ssl_certificate_key /etc/nginx/Codesphere_key.key;

    # Paramètres SSL recommandés
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Configuration de sécurité supplémentaire
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Proxy vers le backend (Django/Gunicorn) sur le port 8000
    location / {
        proxy_pass http://web:8000;  # Nom du service backend dans docker-compose.yml
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Page d'erreur personnalisée pour les erreurs serveur du backend
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
